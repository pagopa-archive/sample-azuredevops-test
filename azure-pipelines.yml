# Azure DevOps pipeline to release a new version and deploy to production.

# Only manual activations are intended
trigger: none
pr: none

parameters:
  - name: 'RELEASE_SEMVER'
    displayName: 'When packing a release, define the version bump to apply'
    type: string
    values:
      - major
      - minor
      - patch
    default: minor
  - name: environment
    displayName: Target Environment
    type: string
    default: uat
    values:
      - uat
      - prod

variables:
  ${{ if eq(parameters['environment'], 'uat') }}:
    # DEPLOY_TYPE: $(UAT_DEPLOY_TYPE)
    DEPLOY_TYPE: $[variables['UAT_DEPLOY_TYPE']]
  ${{ if eq(parameters['environment'], 'prod') }}:
    # DEPLOY_TYPE: $(PROD_DEPLOY_TYPE)
    DEPLOY_TYPE: $[variables['PROD_DEPLOY_TYPE']]

pool:
  vmImage: 'ubuntu-latest'

stages:

  # Create a relase
  # Activated when ONE OF these are met:
  # - is on branch $(DEFAULT_BRANCH) 
  # - is a tag in the form v{version}-RELEASE
  - stage: Release
    condition:
      or(
        eq(variables['Build.SourceBranch'], format('refs/heads/{0}', variables.DEFAULT_BRANCH)),
        and(
          startsWith(variables['Build.SourceBranch'], 'refs/tags'),
          endsWith(variables['Build.SourceBranch'], '-RELEASE')
        )
      )
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: make_release
        steps:
        - ${{ if eq(variables['Build.SourceBranch'], format('refs/heads/{0}', variables.DEFAULT_BRANCH)) }}:
          - script: |
              echo "DEFAULT_BRANCH branch"
            displayName: 'Release bundle'

        - ${{ if ne(variables['Build.SourceBranch'], format('refs/heads/{0}', variables.DEFAULT_BRANCH)) }}:
          - script: |
              echo "not DEFAULT_BRANCH branch"
            displayName: 'Skip release bundle'

  # Prepare_artifact
  - stage: Prepare_artifact
    dependsOn:
      - Release
    jobs:
      - job: 'prepare_artifact'
        steps:
          # Build application
          - script: |
              echo "build app"
              echo $DEPLOY_TYPE
            displayName: 'Build'

  # Deploy 
  - stage: 'Deploy_to_${{ parameters.environment }}'
    dependsOn:
      - Prepare_artifact
    jobs:
      - job: 'do_deploy_production_slot'
        condition: and(succeeded(),eq(variables.DEPLOY_TYPE, 'production_slot'))
        steps:
          - script: |
              echo "Deploy to production slot"
            displayName: 'Deploy to production slot'

      - job: 'do_deploy_staging_slot_and_swap'
        condition: and(succeeded(),eq(variables.DEPLOY_TYPE, 'staging_slot_and_swap'))
        steps:
          - script: |
              echo "Deploy to staging slot"
            displayName: 'Deploy to staging slot'

          - script: |
              echo "Healthcheck"
            displayName: 'Healthcheck'

          - script: |
              echo "Swap with production slot"
            displayName: 'Swap with production slot'
